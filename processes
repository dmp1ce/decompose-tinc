# Include common processes
source $(_decompose-project-root)/.decompose/environment/lib/common/processes
source $(_decompose-project-root)/.decompose/environment/lib/docker/processes
source $(_decompose-project-root)/.decompose/environment/lib/backup/processes

DECOMPOSE_PROCESSES+=( 'init' 'explore_tinc' 'cron' 'build' 'up'
  "${DECOMPOSE_COMMON_PROCESSES[@]}" "${DECOMPOSE_BACKUP_PROCESSES[@]}"
  "${DECOMPOSE_DOCKER_PROCESSES[@]}" )

_decompose-process-cron() {
  echo "Running cron ..."

  return_code=0
  decompose build
  return_code=$((return_code + $?))
  decompose up
  return_code=$((return_code + $?))
  decompose remove-dangling-docker-images
  return_code=$((return_code + $?))
  decompose backup_config
  return_code=$((return_code + $?))

  return $return_code
}
_decompose-process-cron_help() {
  echo "  Runs actions that should be scheduled through host cron"
}

_decompose-process-build() {
  local return_code=0

  _decompose-process-common-build
  return_code=$((return_code + $?))
  _decompose-process-docker-build
  return_code=$((return_code + $?))

  return $return_code
}
_decompose-process-build_help() {
  echo "  Build the project"
}

_decompose-process-up() {
  docker-compose up -d
}
_decompose-process-up_help() {
  echo "  Start project locally"
}

_decompose-process-init(){
  if [ -z "$PROJECT_TINC_NETWORK_NAME" ]; then
    echo "Please specify PROJECT_TINC_NETWORK_NAME in elements file."
    exit 1
  fi
  if [ -z "$1" ]; then
    echo "Please hostname as the first parameter."
    exit 2
  fi
  docker-compose run --rm -u hostuser tinc -n $PROJECT_TINC_NETWORK_NAME init $1
}
_decompose-process-init_help() {
  echo "  Run tinc init"
}

_decompose-process-explore_tinc() {
  if [ "$1" == "root" ]; then
    docker-compose exec tinc bash
  else
    docker-compose exec --user=hostuser tinc bash
  fi
}
_decompose-process-explore_tinc_help() {
  echo "  Explore running tinc instance"
  echo "  Use 'root' as the first parameter to explore as root"
}

# vim:syntax=sh tabstop=2 shiftwidth=2 expandtab
